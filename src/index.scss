$boardBorder: 3px;
$squareSize: 17vh;
// $squareSize: 10vmax;

$boardBackground: #362f1b;
$ticColor: #d4b357;

$gridLineBorder: 0.7vh;
// $gridLineBorder: 1vmax;
#gameOver {
  position: fixed;
  left: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  background-color: rgba(255, 255, 255, 0);
  backdrop-filter: blur(7px);
  z-index: 100;
  opacity: 0;
  transition: 1s;
  pointer-events: none;
}
#gameOverText {
  margin: 10vh 0 10vh 0;
  font-size: 20vh;
}
#resetButton {
  font-size: 7vh;
  opacity: 1;
}
i {
  font-size: 1.5em;
}
.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}
img {
  flex: 0 0 auto;
  height: 7vh;
  margin: 0 2vw 0 2vw;
}
#title {
  font-size: 6vh;
  margin: 0;
}
#logo {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin: 5vh 0 10px 0;
}
.gridLines {
  box-sizing: border-box;
  opacity: 0.6;
  position: absolute;
  left: $squareSize - $gridLineBorder/2;
  top: 0;
  height: $squareSize * 3;
  width: $squareSize + $gridLineBorder;
  border-width: 0px $gridLineBorder 0px $gridLineBorder;
  border-style: solid;
  border-color: #e0d7ba;
  pointer-events: none;
}
.rotate {
  transform: rotate(90deg);
}
.line {
  opacity: 0.9;
  position: absolute;
  width: 0;
  border-radius: 10px;
  transition-property: width; //Yeah, transform and scaleX is faster, but I'll have to figure out how to animate rotation and scale separately without knowing the rotation angle beforehand + it's going to be defined by React on the element in html which obv overrides css
  transition-duration: 1s;
  transform-origin: left;
  background-color: #c00;
  transition-delay: 1s;
}
body {
  background-color: #452e00;
  background-image: url("./img/black-linen.png");
  box-sizing: border-box;
  font: 14px "Century Gothic", Futura, sans-serif;
  // font: 14px "Courier New", Courier, monospace;
  color: #e0d7ba;
  // background-color: #353535;
  text-align: center;
  margin: auto;
}
.board {
  position: relative;
  border: none;
  flex: 0 0 auto;
  max-height: 100%;
}
ol,
ul {
  padding-left: 0px;
  list-style-type: none;
}
li {
  display: flex;
  flex-direction: column;
  justify-content: stretch;
}
.board-row:after {
  clear: both;
  content: "";
  display: table;
}

.status {
  margin-bottom: 10px;
}

.square {
  cursor: pointer;
  background-color: rgba(255, 255, 255, 0);
  padding: 0;
  opacity: 1;
  border-radius: 0px;
  border: none;
  float: left;
  width: $squareSize;
  height: $squareSize;
}
.tic {
  opacity: 0;
  color: $ticColor;
  font-size: $squareSize * 1.3/16;
  font-weight: bold;
  padding: 0;
  text-align: center;
}

.game {
  flex: 1 1 auto;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}
.gameButtons {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  margin: 0;
}
#historyButtons {
  flex: 1 1 auto;
}
.but {
  cursor: pointer;
  opacity: 0.6;
  background: #917524;
  border: none;
  border-radius: 10px;
  color: #e0d7ba;
  transition: 0.3s;
  font-size: 1.5em;
}
button:focus {
  outline: none;
}
.but:hover {
  background: #d4b357;
  color: #544418;
}
.X,
.O {
  margin: auto;
  display: block;
  width: min-content;
  transform: scale(8);
  opacity: 0.8;
  transition: 0.3s;
}
