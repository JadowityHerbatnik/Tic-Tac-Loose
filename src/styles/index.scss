$boardBackground: #362f1b;
$ticColor: #d4b357;

$gridLineBorder: 0.7vh;
*,
*::before,
*::after {
  box-sizing: border-box;
}
html,
body,
#root {
  height: 100%;
}
body {
  background-color: #452e00;
  background-image: url("../img/black-linen.webp");
  font: 14px "Century Gothic", Futura, sans-serif;
  color: #e0d7ba;
  text-align: center;
  margin: auto;
}
#gameOver {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: fixed;
  left: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  background-color: rgba(255, 255, 255, 0);
  @supports (not (backdrop-filter: blur())) {
    background-color: rgba(51, 28, 4, 0.95);
  }
  backdrop-filter: blur(10px);
  opacity: 0;
  transition: opacity 1s;
  pointer-events: none;
}
#gameOverText {
  font-size: 15vh;
  text-shadow: 0px 0px 25px rgba(248, 255, 232, 1);
}
.but {
  cursor: pointer;
  background: #d4b357;
  color: #544418;
  max-width: 80vw;
  border: none;
  padding: 1vh;
  border-radius: 10px;
  transition: 0.3s;
  font-size: 8vh;
}
@media (hover: hover) and (pointer: fine) {
  .but:hover {
    background: #917524;
  }
}
i {
  font-size: 8vh;
}
.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  @media only screen and (orientation: portrait) {
    height: 90vh;
  }
}
img {
  flex: 0 0 auto;
  height: 7vh;
  margin: 0 2vw 0 2vw;
}
#title {
  font-size: 7vh;
  margin: 0;
}
#logo {
  display: flex;
  padding: 0 4vw 0 4vw;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin: 5vh 0 5vh 0;
}
.gridLines {
  opacity: 0.6;
  position: absolute;
  left: calc(100% / 3);
  top: 0;
  height: 100%;
  width: calc(100% / 3);
  border-width: 0px $gridLineBorder 0px $gridLineBorder;
  border-style: solid;
  border-color: #e0d7ba;
  pointer-events: none;
}
.rotate {
  transform: rotate(90deg);
}
.line {
  opacity: 0.9;
  position: absolute;
  width: 0;
  border-radius: 10px;
  transform-origin: left;
  background-color: #c00;
  transition: width 1s 1s;
  //Yeah, transform and scaleX is faster, but I'll have to figure out how to animate rotation and scale separately without knowing the rotation angle beforehand + it's going to be defined by React on the element in html which obv overrides css
}
.board {
  position: relative;
  border: none;
  flex: 0 0 auto;
  max-height: 100%;
}

.board-row:after {
  clear: both;
  content: "";
  display: table;
}

.square {
  cursor: pointer;
  background-color: rgba(255, 255, 255, 0);
  padding: 0;
  opacity: 1;
  border-radius: 0px;
  border: none;
  float: left;
}
.tic {
  opacity: 1;
  color: $ticColor;
  padding: 0;
  text-align: center;
  & i {
    font-size: 3.5em;
  }
}

.game {
  flex: 1 1 auto;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}
button:focus {
  outline: none;
}
.X,
.O {
  margin: auto;
  display: block;
  width: min-content;
  transform: scale(3);
  opacity: 0.8;
  transition: 0.3s;
}
